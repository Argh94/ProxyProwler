name: ProxyProwler

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # فقط اجرای دستی

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        proxy_type: [SOCKS5, SOCKS4, HTTPS]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Files/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create or update requirements.txt
        working-directory: ./Files
        run: |
          echo -e "requests\npytz\njdatetime" > requirements.txt
          cat requirements.txt
          ls -la  # نمایش محتوای دایرکتوری برای دیباگ

      - name: Install dependencies
        working-directory: ./Files
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found!"
            exit 1
          fi
          pip list  # نمایش لیست پکیج‌های نصب‌شده برای دیباگ

      - name: Run scraper for ${{ matrix.proxy_type }}
        working-directory: ./Files
        run: python proxy_scraper.py ${{ matrix.proxy_type }}

      - name: Move output files to root
        run: |
          for file in ${{ matrix.proxy_type }}.txt; do
            if [ -f "Files/$file" ]; then
              mv "Files/$file" .
              echo "Moved $file to root"
            else
              echo "File $file not found in Files directory"
            fi
          done

      - name: Debug:List files in repository
        run: |
          echo "Files in root directory:"
          ls -la
          echo "Files in Files directory:"
          ls -la Files || echo "Files directory does not exist"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: proxy-files-${{ matrix.proxy_type }}
          path: |
            ${{ matrix.proxy_type }}.txt
            Files/requirements.txt

  finalize:
    runs-on: ubuntu-latest
    needs: scrape
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts to root
        run: |
          for artifact in artifacts/proxy-files-*/*.txt; do
            if [ -f "$artifact" ]; then
              mv "$artifact" .
              echo "Moved $artifact to root"
            fi
          done
          if [ -f "artifacts/proxy-files-*/requirements.txt" ]; then
            mv artifacts/proxy-files-*/requirements.txt Files/requirements.txt
            echo "Moved requirements.txt to Files"
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies for README update
        working-directory: ./Files
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found!"
            exit 1
          fi
          pip list

      - name: Run scraper to update README
        working-directory: ./Files
        run: python proxy_scraper.py

      - name: Debug: List files in repository
        run: |
          echo "Files in root directory:"
          ls -la
          echo "Files in Files directory:"
          ls -la Files || echo "Files directory does not exist"

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git checkout main
          for file in README.md Files/requirements.txt SOCKS5.txt SOCKS4.txt HTTPS.txt; do
            if [ -f "$file" ]; then
              git add "$file"
              echo "Added $file to git"
            else
              echo "File $file not found, skipping"
            fi
          done
          git diff --quiet && git diff --staged --quiet || git commit -m "♻️ ProxyProwler Update"
          git push || echo "No changes to push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
